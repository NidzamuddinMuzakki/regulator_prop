{"version":3,"sources":["components/popupAll/index.js","components/TableMenu/index.js","views/Adapro/Credential/Menu/index.js","components/tabkomponen/tabs.js"],"names":["useStyles","_material_ui_icons_CheckBoxOutlineBlank__WEBPACK_IMPORTED_MODULE_12___default","a","_material_ui_icons_CheckBox__WEBPACK_IMPORTED_MODULE_13___default","makeStyles","theme","root","back","background","paper","height","width","control","padding","spacing","popup","&:hover","boxShadow","DialogTitle","withStyles","margin","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","Object","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_18__","assign","disableTypography","className","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_24__","variant","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_21__","aria-label","onClick","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_23___default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","_React$useState11","_React$useState","React","useState","_React$useState2","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","open","setOpen","_React$useState3","_React$useState4","Date","prototype","toDateInputValue","local","this","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","useSelector","state","userSettingSelected","dataMenuRedux","menupilihan","menu","_React$useState5","_React$useState6","_React$useState7","_React$useState8","dataGroup","setDataGroup","_React$useState9","dept_name","dept_id","role_name","role_id","group_name","group_id","branch_id","branch_name","menu_id","report_id","module_id","menu_url","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","_React$useState10","dataChange","setDataChange","actionForm","selected","popupDepart","isOpen","popupGroup","getDepartDetail","useCallback","id","token","localStorage","getItem","API","post","key","info_data","then","data","uaja","length","getBranchDetail","useEffect","console","log","dataMenuAction","getGroupDetail","getMenuDetail","getRoleDetail","menubaru","_step","_iterator","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__","Menu","s","n","done","uuu","value","Name","_step2","_iterator2","push","err","e","f","getGroup","kirimuserselected","jumlah","type","payload","selectedUser","selectedId","dispatch","useDispatch","kirimisOpen","convert","name","target","handleChange","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","resetForm","_setDataChange","handleClose","memo","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_10__","fullWidth","maxWidth","style","aria-labelledby","display","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_11__","justifyContent","alignItems","_material_ui_icons_Person__WEBPACK_IMPORTED_MODULE_28___default","marginLeft","lineHeight","fontFamily","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_9__","container","item","xs","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_16__","marginTop","label","onChange","_material_ui_lab_Autocomplete__WEBPACK_IMPORTED_MODULE_17__","options","find","v","getOptionLabel","option","renderInput","params","sm","md","map","index","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_15__","styles","direction","textAlign","_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_14__","checked","View","Create","Update","Delete","menu_desc","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8__","autoFocus","alert","catch","descendingComparator","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","react_default","TableHead","TableRow","TableCell","Checkbox","indeterminateIcon","RemoveCircle_default","icon","RadioButtonUnchecked_default","checkedIcon","CheckCircle_default","indeterminate","inputProps","numeric","disablePadding","headCell","sortDirection","useToolbarStyles","paddingLeft","paddingRight","highlight","backgroundColor","text","primary","secondary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","defineProperty","Typography","component","marginBottom","table","minWidth","tableRow","&$selected,&$hover:hover","hover","visuallyHidden","border","clip","overflow","EnhancedTable","slicedToArray","hiding","setHiding","setOrder","setOrderBy","setSelected","page","setPage","_React$useState12","dense","setDense","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","no","menuDesc","menuUrl","crtDate","updDate","rows","dataUser","i","created_time","updated_time","handleLeave","nodeName","parentNode","handleEnter","Math","min","Paper","TableMenu_EnhancedTableToolbar","TableContainer","Table","size","event","newSelecteds","property","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","row","isItemSelected","indexOf","labelId","concat","cursor","onMouseEnter","onMouseLeave","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","Switch","Depart","_useState","_useState2","dataMenuAll","setDataMenuAll","_useState3","_useState4","_useState5","_useState6","setActionForm","_useState7","_useState8","jumlahdata","setJumlahData","dataSelected","popupMenu","rowperpageGroup","rowperpageMenu","kirimisOpenDepart","kirimSelected","rowAdd","rowEdit","rowDelete","fetches","hasil","_loop","Promise","all","getMenuAll","halaman","per_page","count_data","Button","groupName","popupAll","__webpack_require__"],"mappings":"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","file":"static/js/28.d00eb2d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles, useStyle, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport API from './../../api/api';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useEffect } from 'react';\r\nimport set from 'core-js/es6/set';\r\nimport DatePicker from './../datepicker/index';\r\nimport { connect } from 'react-redux';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { popupDepart } from '../../reducers/PopAll';\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n   \r\n  },\r\n  back:{\r\n    background:\"#ebeff1\"\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  popup:{\r\n    \"&:hover\":{\r\n      boxShadow: \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\"\r\n    }\r\n  }\r\n}));\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [open, setOpen] = React.useState(false);\r\n  const [label, setLabel] = React.useState([]);\r\n//   console.log(open)\r\n  Date.prototype.toDateInputValue = (function () {\r\n    var local = new Date(this);\r\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n    return local.toJSON().slice(0, 10);\r\n  });\r\n  \r\n\r\n  const selectedusersetting = useSelector(state => state.userSettingSelected);\r\n  const dataMenuRedux = useSelector(state=>state.menupilihan.menu);\r\n  // const [username, setUsername] = React.useState(\"\");\r\n  // const [password, setPassword] = React.useState(\"\");\r\n  // const [name, setName] = React.useState(\"\");\r\n  // const [userid, setUserId] = React.useState(\"\");\r\n  const [ambildataMenu, setAmbildataMenu] = React.useState([]);\r\n  const [dataGroup, setDataGroup] = React.useState([]);\r\n\r\n  // const [nik, setNik] = React.useState(\"\");\r\n  // const [depart, setDepart] = React.useState(0);\r\n  // const [role, setRole] = React.useState(0);\r\n  // const [periode, setPeriode] = React.useState(0);\r\n  // const [branch, setBranch] = React.useState(0);\r\n  // const [expired, setExpired] = React.useState(\"\");\r\n  // const [status, setStatus] = React.useState(\"\");\r\n  const [dataChange, setDataChange] = React.useState({\r\n   dept_name:'',\r\n   dept_id:'',\r\n   role_name:'',\r\n   role_id:'',\r\n   group_name:'',\r\n   group_id:'',\r\n   branch_id:'',\r\n   branch_name:'',\r\n   menu_id:'',\r\n   report_id:'',\r\n   module_id:'',\r\n   menu_url:'',\r\n   menu_id:'',\r\n   menu_desc:'',\r\n   \r\n   menu:dataMenuRedux,\r\n  })\r\n  \r\n \r\n  let actionForm = props.actionForm;\r\n \r\n \r\n  const isOpenDepart = useSelector(state=>state.popupDepart.isOpen)\r\n  const isOpenGroup = useSelector(state=>state.popupGroup.isOpen)\r\n  \r\n  const selected = useSelector(state => state.userSettingSelected);\r\n  \r\n  const getDepartDetail = React.useCallback((id) => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_department\", {\r\n      key: token,\r\n      dept_id: id ,\r\n      info_data: \"detail\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n      \r\n      setDataChange({\r\n            dept_name:uaja[\"Department Name\"],\r\n            dept_id:id,\r\n            group_id:uaja[\"Group Name\"].length?uaja[\"Group Name\"][0][\"group_id\"]:''\r\n        }) \r\n    })\r\n    \r\n    },[setDataChange]  ) \r\n    const getBranchDetail = React.useCallback((id) => {  //on startup function\r\n        let token = localStorage.getItem('id_token');\r\n    \r\n        // API.post(\"get_branch\", {\r\n        //   key: token,\r\n        //   branch_id: id,\r\n        //   info_data: \"detail\"\r\n        // }).then(data => {\r\n        //   let uaja = data.data.data;\r\n          \r\n        //   setDataChange({\r\n        //         branch_name:data.data.data.branch_name,\r\n        //         branch_id:data.data.data.branch_id,\r\n                \r\n        //     }) \r\n        // })\r\n        \r\n    },[setDataChange])\r\nuseEffect(()=>{\r\n  console.log(dataChange.menu)\r\n  console.log(props.dataMenuAction)\r\n \r\n  \r\n},[dataMenuRedux])\r\nconst getGroupDetail = React.useCallback((id) => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_group\", {\r\n      key: token,\r\n      group_id: id,\r\n      info_data: \"detail\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n    \r\n      console.log(uaja[\"Group Name\"])\r\n      setDataChange({\r\n            group_name:uaja[\"Group Name\"],\r\n            group_id:uaja[\"Group Id\"]\r\n        }) \r\n    })\r\n    \r\n},[setDataChange])\r\n\r\nconst getMenuDetail = React.useCallback((id) => {  //on startup function\r\n  let token = localStorage.getItem('id_token');\r\n\r\n  // API.post(\"get_menu\", {\r\n  //   key: token,\r\n  //   menu_id: id,\r\n  //   info_data: \"detail\"\r\n  // }).then(data => {\r\n  //   let uaja = data.data.data;\r\n    \r\n  //   setDataChange({\r\n  //         menu_url:data.data.data.menu_url,\r\n  //         menu_id:data.data.data.menu_id,\r\n  //         menu_desc:data.data.data.menu_desc\r\n  //     }) \r\n  // })\r\n  \r\n},[setDataChange])\r\nconst getRoleDetail = React.useCallback((id) => {  //on startup function\r\n  let token = localStorage.getItem('id_token');\r\n \r\n  API.post(\"get_role\", {\r\n    key: token,\r\n    role_id: id,\r\n    info_data: \"detail\"\r\n  }).then(data => {\r\n    let uaja = data.data.data;\r\n    let menubaru = [];\r\n    console.log(data.data.data)\r\n    let i = 0;\r\n    for(const uuu of data.data.data.Menu){\r\n      console.log(dataChange.menu[i])\r\n      console.log(uuu.Name)\r\n      for(const dataMenu of dataChange.menu){\r\n        if(dataMenu.Name==uuu.Name){\r\n          menubaru.push(uuu)\r\n        }\r\n      }\r\n    }\r\n    if(menubaru.length==0){\r\n      menubaru = dataChange.menu;\r\n    }\r\n    setDataChange({\r\n          role_name:data.data.data[\"Role Name\"],\r\n          role_id:id,\r\n          menu:menubaru\r\n      }) \r\n  })\r\n  \r\n},[setDataChange])\r\n\r\n\r\n\r\n\r\n    \r\n      // setUserId(data.data.data.user_id)\r\n      // setUsername(data.data.data.username)\r\n      // setPassword(data.data.data.password)\r\n      // setName(data.data.data.name)\r\n      // setNik(data.data.data.nik)\r\n      // setPeriode(data.data.data.periode_usage)\r\n      // setStatus(data.data.data.status_date)\r\n      // setExpired(data.data.data.expired_date)\r\n      // setBranch(data.data.data.branch_id)\r\n      // setRole(data.data.data.role_id)\r\n      // setDepart(data.data.data.dept_id)\r\n      // setGroup(data.data.data.group_id)\r\n      // this.setState({\r\n      //   dataSet: data.data.data\r\n      // });\r\n\r\n\r\nconst getGroup = React.useCallback(() => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_group\", {\r\n      key: token,\r\n      info_data: \"all\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n      setDataGroup(data.data.data)\r\n    })\r\n},[setDataGroup])\r\n  const kirimuserselected = (jumlah, data) => {\r\n    return {\r\n      type: \"SELECTEDUSER\",\r\n      payload: {\r\n        selectedUser: jumlah,\r\n        selectedId: data\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n \r\n\r\n  \r\n  const dispatch = useDispatch();\r\n  const kirimisOpen = (isOpen, type) => {\r\n    return {\r\n      type: type,\r\n      payload: {\r\n        isOpen: isOpen,\r\n      }\r\n    }\r\n  }\r\n  const convert = (name, value) => ({\r\n    target: {\r\n      name, value\r\n    }\r\n  })\r\n  const handleSubmitUser = (e) => {\r\n\r\n   \r\n    let token = localStorage.getItem('id_token');\r\n    // console.log(role);\r\n    // dispatch(kirimuserselected(0, []))\r\n    if (actionForm == \"Edit Department\") {\r\n      API.post(\"update_department\", {\r\n        key: token,\r\n        dept_id:dataChange.dept_id,\r\n        dept_name:dataChange.dept_name,\r\n        group_id:dataChange.group_id\r\n\r\n      }).then(data => {\r\n\r\n        // console.log(data.data)\r\n        alert(\"berhasil Mengubah\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n        // this.setState({\r\n        //   dataSet: data.data.data\r\n        // });\r\n\r\n      }).catch((err) => {\r\n        alert(\"Anda Bukan Admin\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n      })\r\n    } else  if (actionForm == \"Add Department\") {\r\n      API.post(\"create_department\", {\r\n        key: token,\r\n        \r\n        dept_id:dataChange.dept_id,\r\n        dept_name:dataChange.dept_name,\r\n        group_id:dataChange.group_id\r\n\r\n      }).then(data => {\r\n\r\n        // console.log(data.data)\r\n        alert(\"berhasil menambah\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n        // this.setState({\r\n        //   dataSet: data.data.data\r\n        // });\r\n\r\n      })\r\n    }\r\n    else  if (actionForm == \"Add Branch\") {\r\n        API.post(\"create_branch\", {\r\n          key: token,\r\n          \r\n          branch_id:dataChange.branch_id,\r\n          branch_name:dataChange.branch_name,\r\n         \r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else  if (actionForm == \"Add Role\") {\r\n        API.post(\"create_role\", {\r\n          key: token,\r\n          \r\n          role_id:dataChange.role_id,\r\n          role_name:dataChange.role_name,\r\n          menu_id:dataChange.menu_id,\r\n          report_id:dataChange.report_id,\r\n          module_id:dataChange.module_id,\r\n         \r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Role\") {\r\n        API.post(\"update_role\", {\r\n          key: token,\r\n        \r\n          role_id:dataChange.role_id,\r\n          role_name:dataChange.role_name,\r\n          menu_id:dataChange.menu_id,\r\n          report_id:dataChange.report_id,\r\n          module_id:dataChange.module_id,\r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n        })\r\n      }\r\n    else  if (actionForm == \"Add Group\") {\r\n        API.post(\"create_group\", {\r\n          key: token,\r\n          \r\n         \r\n          group_name:dataChange.group_name,\r\n          group_id:dataChange.group_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else  if (actionForm == \"Add Menu\") {\r\n        API.post(\"create_menu\", {\r\n          key: token,\r\n          \r\n         \r\n          menu_id:dataChange.menu_id,\r\n          menu_desc:dataChange.menu_desc,\r\n          menu_url:dataChange.menu_url\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Menu\") {\r\n        API.post(\"update_menu\", {\r\n          key: token,\r\n          menu_id:dataChange.menu_id,\r\n          menu_desc:dataChange.menu_desc,\r\n          menu_url:dataChange.menu_url\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n        })\r\n      }\r\n     else if (actionForm == \"Edit Group\") {\r\n        API.post(\"update_group\", {\r\n          key: token,\r\n        \r\n          group_name:dataChange.group_name,\r\n          group_id:dataChange.group_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Branch\") {\r\n        API.post(\"update_branch\", {\r\n          key: token,\r\n        \r\n          branch_name:dataChange.branch_name,\r\n          branch_id:dataChange.branch_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n        })\r\n      }\r\n\r\n  }\r\n  const handleChange = React.useCallback((e) => {\r\n\r\n      setDataChange({\r\n        ...dataChange,\r\n        [e.target.name]:e.target.value \r\n      })\r\n    // let etarget = e.target.name;\r\n    // console.log(e.target.name)\r\n    // if (etarget == \"username\") {\r\n    //   setDataChange({\r\n    //     username:e.target.value\r\n    //   })\r\n    // }\r\n    // else if (etarget == \"password\") {\r\n    //     setDataChange({\r\n    //       password:e.target.value\r\n\r\n    //     } )\r\n    // }\r\n    // }  else if (etarget == \"nik\") {\r\n    //   setNik(e.target.value)\r\n    // } else if (etarget == \"name\") {\r\n    //   setName(e.target.value)\r\n    // } else if (etarget == \"depart\") {\r\n    //   setDepart(e.target.value)\r\n    // } else if (etarget == \"userid\") {\r\n    //   setUserId(e.target.value)\r\n    // } else if (etarget == \"group\") {\r\n    //   setGroup(e.target.value)\r\n    // } else if (etarget == \"role\") {\r\n    //   setRole(e.target.value)\r\n    // } else if (etarget == \"branch\") {\r\n    //   console.log(e.target.value)\r\n    //   setBranch(e.target.value)\r\n    // }\r\n    // else if (etarget == \"periode\") {\r\n    //   console.log(e.target.name)\r\n    //   setPeriode(e.target.value)\r\n    // } else if (etarget == \"expired\") {\r\n    //   setExpired(e.target.value)\r\n    // } else if (etarget == \"status\") {\r\n    //   setStatus(e.target.value)\r\n    // }\r\n\r\n\r\n \r\n  }, [dataChange])\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const resetForm = React.useCallback(() => {\r\n    setDataChange({\r\n     \r\n        dept_name:'',\r\n        dept_id:'',\r\n        role_name:'',\r\n        role_id:'',\r\n        group_name:'',\r\n        group_id:'',\r\n        branch_id:'',\r\n        branch_name:'',\r\n        menu_id:'',\r\n        report_id:'',\r\n        module_id:'',\r\n        menu_url:'',\r\n        menu_id:'',\r\n        menu_desc:'',\r\n        menu:dataMenuRedux\r\n   \r\n    })\r\n    dispatch(kirimuserselected(0,[]))\r\n  },[setDataChange]);\r\n \r\n  const Form  = React.memo((props)=>{\r\n      return (\r\n          <div>\r\n                 \r\n\r\n          </div>\r\n      )\r\n  })\r\n  const handleClose = React.useCallback(() => {\r\n    dispatch(kirimuserselected(0,[]))\r\n    if(props.actionForm==\"Add Department\"||props.actionForm==\"Edit Department\"){\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n     \r\n\r\n    }else if(props.actionForm==\"Add Group\" || props.actionForm==\"Edit Group\"){\r\n        dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n       \r\n    }\r\n    else if(props.actionForm==\"Add Branch\" || props.actionForm==\"Edit Branch\"){\r\n        dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n       \r\n    }\r\n    else if(props.actionForm==\"Add Role\" || props.actionForm==\"Edit Role\"){\r\n      dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n    }\r\n    else if(props.actionForm==\"Add Menu\" || props.actionForm==\"Edit Menu\"){\r\n      dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n    }\r\n    \r\n    setOpen(false);\r\n    resetForm();\r\n\r\n  },[open]);\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open)\r\n   \r\n  \r\n   \r\n    if(actionForm==\"Edit Department\" || actionForm==\"Add Department\"){\r\n        getGroup();\r\n        if (actionForm == \"Add Department\") {\r\n        \r\n            resetForm();\r\n            // console.log(open)\r\n        //   let id = selectedusersetting.selectedId[0];\r\n        //   getUserDetail(id);\r\n        } else if(actionForm == \"Edit Department\") {\r\n           \r\n        \r\n          if(selected.selectedUser==1){\r\n              getDepartDetail(selected.selectedId[0]);\r\n          }\r\n        }\r\n    }else if(actionForm==\"Edit Group\" || actionForm==\"Add Group\"){\r\n        if (actionForm == \"Add Group\") {\r\n        \r\n            resetForm();\r\n            // console.log(open)\r\n        //   let id = selectedusersetting.selectedId[0];\r\n        //   getUserDetail(id);\r\n        } else if(actionForm == \"Edit Group\") {\r\n            // resetForm();\r\n        \r\n          if(selected.selectedUser==1){\r\n              getGroupDetail(selected.selectedId[0]);\r\n          }\r\n    }\r\n    \r\n}else if(actionForm==\"Edit Branch\" || actionForm==\"Add Branch\"){\r\n    if (actionForm == \"Add Branch\") {\r\n    \r\n        resetForm();\r\n        // console.log(open)\r\n    //   let id = selectedusersetting.selectedId[0];\r\n    //   getUserDetail(id);\r\n    } else if(actionForm == \"Edit Branch\") {\r\n       \r\n    \r\n      if(selected.selectedUser==1){\r\n          getBranchDetail(selected.selectedId[0]);\r\n      }\r\n}\r\n}\r\nelse if(actionForm==\"Edit Role\" || actionForm==\"Add Role\"){\r\n\r\n  if (actionForm == \"Add Role\") {\r\n  \r\n      resetForm();\r\n      \r\n      // console.log(open)\r\n  //   let id = selectedusersetting.selectedId[0];\r\n  //   getUserDetail(id);\r\n  } else if(actionForm == \"Edit Role\") {\r\n    \r\n  \r\n    if(selected.selectedUser==1){\r\n        getRoleDetail(selected.selectedId[0]);\r\n        \r\n    }\r\n}\r\n\r\n\r\n}\r\nelse if(actionForm==\"Edit Menu\" || actionForm==\"Add Menu\"){\r\n  if (actionForm == \"Add Menu\") {\r\n  \r\n      resetForm();\r\n      // console.log(open)\r\n  //   let id = selectedusersetting.selectedId[0];\r\n  //   getUserDetail(id);\r\n  } else if(actionForm == \"Edit Menu\") {\r\n      resetForm();\r\n  \r\n    if(selected.selectedUser==1){\r\n        getMenuDetail(selected.selectedId[0]);\r\n    }\r\n}}\r\n\r\n    \r\n\r\n  }, [props.open])\r\n  const value = \"ACCU-SEAL 35-532 Bag Sealer\";\r\n  return (\r\n    <div >\r\n\r\n      <Dialog\r\n     \r\n        fullWidth={true}\r\n        maxWidth={actionForm==\"Edit Role\" || actionForm==\"Add Role\"?\"lg\":'sm'} style={{ }}  onClose={handleClose}  aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle style={{ }} id=\"customized-dialog-title\" onClose={handleClose}>\r\n          <div style={{ display: \"flex\", }}>\r\n            <Paper style={{ width: \"50px\", height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><PersonIcon ></PersonIcon></Paper>\r\n            <div style={{width: \"300px\", height: \"50px\",  marginLeft:\"10px\",alignItems:\"center\",justifyContent:\"center\" }}>\r\n                \r\n                  <span color=\"primary\" style={{display: \"flex\",lineHeight: \"50px\", fontFamily:\"revert\", color:\"primary\",}}  >{props.actionForm}</span>\r\n                 \r\n            </div> \r\n\r\n          </div>\r\n\r\n        </DialogTitle>\r\n\r\n        <DialogContent className={classes.root}  >\r\n          <Grid container spacing={1} style={{display:'flex', justifyContent:'center', alignItems:'center' ,}} >\r\n            \r\n\r\n            <Grid item xs={actionForm==\"Edit Role\" || actionForm==\"Add Role\"?12:8}   style={{width:\"100%\",boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\", padding:'10px'}} >\r\n            \r\n               \r\n             {actionForm==\"Edit Department\"||actionForm==\"Add Department\"?\r\n                <div>\r\n                  \r\n                 {/* <TextField\r\n                 style={{ width:\"100%\"}}\r\n                 label={\"Departement Id\"}\r\n                 onChange={handleChange}\r\n                 placeholder=\"User Id\"\r\n                 variant=\"outlined\"\r\n                 name={\"dept_id\"}\r\n                 type=\"number\"\r\n                 value={dataChange.dept_id}\r\n                 \r\n                 // error={touched && invalid}\r\n                 // helperText={touched && error}\r\n                 // {...input}\r\n                 // {...custom}\r\n                 />                              */}\r\n                  <TextField\r\n                 style={{ width:\"100%\", marginTop:\"10px\"}}\r\n                 label={\"Department Name\"} \r\n                 onChange={handleChange}\r\n                 variant=\"outlined\"\r\n                 name={\"dept_name\"}\r\n                 value={dataChange.dept_name} ></TextField>\r\n                 <Autocomplete\r\n                 \r\n                \r\n                  options={dataGroup}\r\n              \r\n                  value={dataChange.group_id?dataGroup.find(v => v.group_id == dataChange.group_id):''}\r\n                  // getOptionSelected ={(option, value) => option === value?option:''}\r\n                  getOptionLabel={(option) => option[\"Group Name\"]?option[\"Group Name\"]:\"\"}\r\n                  onChange={(e, value) => handleChange(convert(\"group_id\", value ? value.group_id : ''))}\r\n                  renderInput={(\r\n                    params) => <TextField name=\"depart\" style={{ marginTop: \"10px\", }} {...params} label=\"Group\" variant=\"outlined\" />}\r\n                />\r\n\r\n                 {/* <Autocomplete\r\n      multiple\r\n      id=\"checkboxes-tags-demo\"\r\n      options={dataGroup}\r\n      disableCloseOnSelect\r\n      getOptionLabel={(option) => option[\"Group Name\"]}\r\n      renderOption={(option, { selected }) => (\r\n        <React.Fragment>\r\n          <Checkbox\r\n            icon={icon}\r\n            checkedIcon={checkedIcon}\r\n            style={{ marginRight: 8 }}\r\n            checked={selected}\r\n          />\r\n          {option[\"Group Name\"]}\r\n        </React.Fragment>\r\n      )}\r\n      style={{ width:\"100%\", marginTop:\"10px\"}}\r\n      renderInput={(params) => (\r\n        <TextField {...params} variant=\"outlined\" label=\"Group\" placeholder=\"Group\" />\r\n      )}></Autocomplete> */}\r\n                 </div>\r\n             :actionForm==\"Edit Group\"||actionForm==\"Add Group\"?\r\n             <div>\r\n                   <TextField\r\n                 style={{ width:\"100%\"}}\r\n                 label={\"Group ID\"}\r\n                 onChange={handleChange}\r\n                 variant=\"outlined\"\r\n                 name={\"group_id\"}\r\n                 type=\"number\"\r\n                 value={dataChange.group_id}\r\n                 \r\n                 // error={touched && invalid}\r\n                 // helperText={touched && error}\r\n                 // {...input}\r\n                 // {...custom}\r\n                 />                             \r\n                  <TextField\r\n                 style={{ width:\"100%\", marginTop:\"10px\"}}\r\n                 label={\"Group Name\"} \r\n                 onChange={handleChange}\r\n                 variant=\"outlined\"\r\n                 name={\"group_name\"}\r\n                 value={dataChange.group_name} ></TextField>\r\n             </div>\r\n             \r\n             :actionForm==\"Edit Branch\"||actionForm==\"Add Branch\"?\r\n             <div>\r\n             <TextField\r\n           style={{ width:\"100%\"}}\r\n           label={\"Branch ID\"}\r\n           onChange={handleChange}\r\n           variant=\"outlined\"\r\n           name={\"branch_id\"}\r\n           type=\"number\"\r\n           value={dataChange.branch_id}\r\n           \r\n           // error={touched && invalid}\r\n           // helperText={touched && error}\r\n           // {...input}\r\n           // {...custom}\r\n           />                             \r\n            <TextField\r\n           style={{ width:\"100%\", marginTop:\"10px\"}}\r\n           label={\"Branch Name\"} \r\n           onChange={handleChange}\r\n           variant=\"outlined\"\r\n           name={\"branch_name\"}\r\n           value={dataChange.branch_name} ></TextField>\r\n       </div> :actionForm==\"Edit Role\"||actionForm==\"Add Role\"?\r\n         <div>\r\n           <Grid container>\r\n           <Grid item xs={12} sm={6} md={3} >\r\n             <Grid item>\r\n\r\n            \r\n           <TextField\r\n       style={{ width:\"100%\", marginTop:\"10px\"}}\r\n       label={\"Role Name\"} \r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"role_name\"}\r\n       value={dataChange.role_name} ></TextField>\r\n        {/* <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Module ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"module_id\"}\r\n       type=\"number\"\r\n       value={dataChange.module_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />            */}\r\n        {/* <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Report ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"report_id\"}\r\n       type=\"number\"\r\n       value={dataChange.report_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />      */}\r\n        {/* <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Menu ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_id\"}\r\n       type=\"number\"\r\n       value={dataChange.menu_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       /> */}\r\n        </Grid>\r\n           </Grid>\r\n           <Grid container xs={12} sm={6} md={9}>\r\n           {dataChange.menu?dataChange.menu.map((data, index)=>{\r\n             return (\r\n            <Grid container>  \r\n\r\n               <Grid item xs={6} sm={3} md={4} style={{display:\"flex\", justifyContent:'center', alignItems:'center',height:'80px'}}>\r\n             <InputLabel styles={{width:\"100%\"}}>{data.Name}</InputLabel>\r\n           </Grid>\r\n             <Grid item xs={6} sm={3} md={5}>\r\n           <div style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\", direction:\"row\",width:\"100%\", height:\"80px\"}}>\r\n \r\n <div style={{margin:'10px',textAlign:\"center\"}}>\r\n <Switch\r\n checked={data.View==\"true\"?true:false}\r\n onChange={e=>handleChange(convert(e.target.name, e.target.checked))}\r\n name=\"view\"\r\n color=\"primary\"\r\n />\r\n  <br></br>\r\n <InputLabel>View</InputLabel>\r\n </div>\r\n <div style={{margin:'10px',textAlign:\"center\"}}>\r\n <Switch\r\n checked={data.Create==\"true\"?true:false}\r\n onChange={e=>handleChange(convert(e.target.name, e.target.checked))}\r\n name=\"create\"\r\n color=\"primary\"\r\n />\r\n  <br></br>\r\n <InputLabel>Create</InputLabel>\r\n </div><div style={{margin:'10px',textAlign:\"center\"}}>\r\n <Switch\r\n checked={data.Update==\"true\"?true:false}\r\n onChange={e=>handleChange(convert(e.target.name, e.target.checked))}\r\n name=\"update\"\r\n color=\"primary\"\r\n />\r\n  <br></br>\r\n <InputLabel>Update</InputLabel>\r\n </div><div style={{margin:'10px', textAlign:\"center\"}}>\r\n <Switch\r\n checked={data.Delete==\"true\"?true:false}\r\n onChange={e=>handleChange(convert(e.target.name, e.target.checked))}\r\n name=\"delete\"\r\n color=\"primary\"\r\n />\r\n  <br></br>\r\n <InputLabel>Delete</InputLabel>\r\n </div>\r\n \r\n    </div>\r\n    </Grid>\r\n    \r\n    </Grid> \r\n\r\n            ) }):''}     \r\n             </Grid>\r\n           \r\n           </Grid>\r\n          \r\n         {/* <TextField\r\n       style={{ width:\"100%\"}}\r\n       label={\"Role ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"role_id\"}\r\n       type=\"number\"\r\n       value={dataChange.role_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />                              */}\r\n                         \r\n   </div> \r\n       \r\n       :actionForm==\"Edit Menu\"||actionForm==\"Add Menu\"?\r\n       <div>\r\n       <TextField\r\n       style={{ width:\"100%\", marginTop:\"10px\"}}\r\n       label={\"Menu ID\"} \r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_id\"}\r\n       type={\"number\"}\r\n       value={dataChange.menu_id} ></TextField>\r\n        <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Menu Description\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_desc\"}\r\n       type=\"text\"\r\n       value={dataChange.menu_desc}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />           \r\n        <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Menu Url\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_url\"}\r\n       type=\"text\"\r\n       value={dataChange.menu_url}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />     \r\n     \r\n       </div>  \r\n       :''}\r\n              </Grid>\r\n\r\n            \r\n            \r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions style={{}}>\r\n          <Button className={classes.popup} autoFocus onClick={handleSubmitUser} >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport set from 'core-js/es6/set';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport Tabs from  '../tabkomponen/tabs.js';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  // console.log(\"hay\"+props.data)\r\n  const headCells = [\r\n    { id: 'no', numeric: true, disablePadding: true, label: 'No' },\r\n    { id: 'menu_id', numeric: false, disablePadding: false, label: 'Menu ID' },\r\n    { id: 'description', numeric: false, disablePadding: false, label: 'Description' },\r\n    { id: 'url', numeric: false, disablePadding: false, label: 'URL' },\r\n    { id: 'created_time', numeric: false, disablePadding: false, label: 'Created Time' },\r\n    { id: 'updated_time', numeric: false, disablePadding: false, label: 'Updated Time' },\r\n \r\n\r\n\r\n  ];\r\n  \r\n  return (\r\n  \r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n           color = \"primary\"\r\n           indeterminateIcon={<RemoveCircleIcon/>}\r\n           icon={<RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>}\r\n           checkedIcon={<CheckCircleIcon></CheckCircleIcon>}\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n           \r\n            padding={'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n           \r\n              {headCell.label}\r\n             \r\n           \r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: \"#0078d4\",\r\n        backgroundColor: \"#c7e0f4\",\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {props.name}\r\n        </Typography>\r\n      )}\r\n\r\n      {/* {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )} */}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableRow: {\r\n    \r\n    \"&$selected,&$hover:hover\": {\r\n      backgroundColor: \"#c7e0f4\"\r\n    },\r\n    \r\n  },\r\n  // tableCell: {\r\n  //   \"$hover:hover &\": {\r\n  //     color: \"pink\"\r\n  //   }\r\n  \r\n  hover: {},\r\n  selected: {},\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const selectedusersetting = useSelector(state =>state.userSettingSelected);\r\n  const dispatch = useDispatch();\r\n  const [hiding, setHiding] = React.useState(\"none\");\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  let deptName = [];\r\n  \r\n  function createData(id,no,menuDesc,menuUrl, crtDate, updDate) {\r\n    return { id,no,menuDesc,menuUrl,crtDate, updDate };\r\n  }\r\n  const rows = [];\r\n  \r\n  let dataUser = props.data;\r\n// console.log(props.deptName[0])\r\n  for(let i=0;i<dataUser.length;i++){\r\n    rows[i] = createData(dataUser[i].menu_id,(i+1),dataUser[i].menu_desc,dataUser[i].menu_url ,dataUser[i].created_time, dataUser[i].updated_time);\r\n    \r\n  }\r\n\r\n  \r\n  \r\n\r\n\r\n  const kirimuserselected = (jumlah, data)=>{\r\n    return{\r\n      type:\"SELECTEDUSER\",\r\n      payload:{\r\n        selectedUser: jumlah,\r\n        selectedId:data\r\n      }\r\n    }\r\n  }\r\n  let handleLeave = (e)=>{\r\n    \r\n    if(e.target.nodeName==\"INPUT\"){\r\n      e.target.parentNode.parentNode.style.display=\"none\";\r\n    }\r\n    else if(e.target.parentNode==null){\r\n\r\n    }else if(e.target.parentNode.children[0]==null){\r\n\r\n    }else if(e.target.parentNode.children[0].children[0]==null){\r\n\r\n    }\r\n    else{\r\n      e.target.parentNode.children[0].children[0].style.display=\"none\";\r\n    }\r\n  }\r\n  let handleEnter = (e)=>{\r\n    if(e.target.parentNode==null){\r\n\r\n    }else if(e.target.parentNode.children[0]==null){\r\n\r\n    }else if(e.target.parentNode.children[0].children[0]==null){\r\n\r\n    }else{\r\n      e.target.parentNode.children[0].children[0].style.display=\"block\";\r\n    }\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if(selected.length>0){\r\n      dispatch(kirimuserselected(0,[]))\r\n      setSelected([]);\r\n    }\r\n    else if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      let jumlah = newSelecteds.length;\r\n      \r\n   \r\n      dispatch(kirimuserselected(jumlah,newSelecteds))\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    dispatch(kirimuserselected(0,[]))\r\n    setSelected([]);\r\n  };\r\n  useEffect(()=>{\r\n    if(selected.length>0){\r\n      setHiding(\"block\");\r\n     \r\n\r\n        \r\n      \r\n    }else{\r\n      setHiding(\"none\")\r\n    }\r\n   \r\n  },[selected])\r\n  useEffect(()=>{\r\n    setSelected([]);\r\n  }, [props.data])\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    \r\n    \r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    let jumlah = newSelected.length;\r\n\r\n   \r\n    dispatch(kirimuserselected(jumlah,newSelected))\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  // console.log(rows)\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n      {/* <Tabs>\r\n        <div label=\"Gator\">\r\n          See ya later, <em>Alligator</em>!\r\n        </div>\r\n        <div label=\"Croc\">\r\n          After 'while, <em>Crocodile</em>!\r\n        </div>\r\n        <div label=\"Sarcosuchus\">\r\n          Nothing to see here, this tab is <em>extinct</em>!\r\n        </div>\r\n      </Tabs> */}\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              \r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  \r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${row.id}`;\r\n                  \r\n                  return (\r\n                    <TableRow\r\n                      id=\"rowcheck\"\r\n                      hover\r\n                      className={classes.tableRow}\r\n                      classes={{ hover: classes.hover, selected:classes.selected }}\r\n                      style={{cursor:\"pointer\"}}\r\n                      onMouseEnter={selected.length==0?handleEnter:null}\r\n                      onMouseLeave={selected.length==0?handleLeave:null}\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell  padding=\"checkbox\">\r\n                        <Checkbox style={{display:hiding}}\r\n                          checked={isItemSelected}\r\n                          icon={<RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>}\r\n                          checkedIcon={<CheckCircleIcon></CheckCircleIcon>}\r\n                          color = \"primary\"\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell >\r\n                        {row.no}\r\n                      </TableCell>\r\n                      <TableCell  >\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell  >{row.menuDesc}</TableCell>\r\n                      <TableCell  >{row.menuUrl}</TableCell>\r\n                      <TableCell  >{row.crtDate}</TableCell>\r\n                      <TableCell  >{row.updDate}</TableCell>\r\n                      \r\n                      \r\n                      \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            \r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React,{useState, useEffect} from 'react';\r\nimport API from 'api';\r\nimport {Paper} from '@material-ui/core'\r\nimport Table from './../../../../components/TableMenu'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Button} from 'reactstrap'\r\nimport { AlternateEmail } from '@material-ui/icons';\r\nimport Dialog from './../../../../components/popupAll'\r\n   \r\n\r\nconst Depart = React.memo(() =>{\r\n    let token = localStorage.getItem('id_token');\r\n    const [dataMenuAll, setDataMenuAll] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [actionForm, setActionForm] = useState('');\r\n    const [jumlahdata, setJumlahData] = useState(0);\r\n    const dataSelected = useSelector(state=>state.userSettingSelected);\r\n    const popupDepart = useSelector(state=>state.popupMenu.isOpen);\r\n    const rowperpageGroup = useSelector(state=>state.rowperpageMenu);\r\n    const dispatch = useDispatch();\r\n    const kirimisOpenDepart = (isOpen) => {\r\n        return {\r\n          type: \"OPENMENU\",\r\n          payload: {\r\n            isOpen: isOpen,\r\n          }\r\n        }\r\n      }\r\n     \r\n      const kirimSelected = (jumlah, data) => {\r\n        return {\r\n          type: \"SELECTEDUSER\",\r\n          payload: {\r\n            selectedUser: jumlah,\r\n            selectedId:data\r\n          }\r\n        }\r\n      }  \r\n      useEffect(()=>{\r\n        dispatch(kirimSelected(0,[]))\r\n      }, [])\r\n    const rowAdd =  React.useCallback(()=>{\r\n        dispatch(kirimisOpenDepart(true))\r\n        setOpen(true);\r\n        setActionForm(\"Add Menu\")\r\n    },[dataSelected])\r\n    const rowEdit = React.useCallback(()=>{\r\n        if(dataSelected.selectedUser==0){\r\n            alert(\"no item selected\")\r\n        }else{\r\n            dispatch(kirimisOpenDepart(true))\r\n            setOpen(true);\r\n            setActionForm(\"Edit Menu\")\r\n\r\n        }\r\n    },[dataSelected])\r\n    const rowDelete = React.useCallback(()=>{\r\n        if(dataSelected.selectedUser==0){\r\n            alert(\"no item selected\")\r\n        }else{\r\n            let hasil = \"\";\r\n            var fetches = [];\r\n            for(let i=0;i<dataSelected.selectedId.length;i++){\r\n                let token = localStorage.getItem('id_token');\r\n             \r\n                fetches.push(API.post(\"/credential_service/delete_menu\",{\r\n                  key: token,\r\n                  menu_id: dataSelected.selectedId[i]\r\n                }).then(data => {\r\n                hasil = hasil +\"Menu ID \"+dataSelected.selectedId[i]+\" \"+data.data.data+\"\\n\";\r\n             \r\n               \r\n              }).catch(err=>{\r\n                  alert(err)\r\n              })\r\n                )}\r\n\r\n            Promise.all(fetches).then(()=>{\r\n                alert(hasil);\r\n                getMenuAll();\r\n                dispatch(kirimSelected(0,[]));\r\n            })    \r\n        }\r\n\r\n    },[dataSelected])\r\n    const getMenuAll = React.useCallback((jumlah, halaman)=>{\r\n        API.post(\"/credential_service/get_menu\",{\r\n            key: token,\r\n            info_data:'all',\r\n            per_page:jumlah,\r\n            page:halaman\r\n        }).then(data => {\r\n            setDataMenuAll(data.data.data);\r\n            setJumlahData(data.data.count_data);\r\n           \r\n           \r\n          \r\n            \r\n          \r\n        })\r\n    },[setDataMenuAll])\r\n    useEffect(()=>{\r\n        getMenuAll(rowperpageGroup.jumlah, rowperpageGroup.halaman);\r\n        setOpen(popupDepart)\r\n       \r\n    },[popupDepart,rowperpageGroup.jumlah, rowperpageGroup.halaman])\r\n    return(\r\n    <div>\r\n        <Button  id=\"btnRowAdd\" className=\"btn-pill btn-outline-dark btn-m\" onClick={rowAdd}>&nbsp;&nbsp;<i className=\"fa fa-plus-square\"></i>&nbsp;<span>Add&nbsp;&nbsp;</span></Button>\r\n        {dataSelected.selectedUser>0?<Button  id=\"btnRowDelete\" className=\"btn-pill btn-outline-danger btn-m\" onClick={rowDelete}><i className=\"fa fa-window-close\"></i>&nbsp;<span>Delete</span></Button>:''}\r\n        {dataSelected.selectedUser==1?<Button color=\"warning\" id=\"btnTableEdit\" className=\"btn-pill btn-m\" onClick={rowEdit}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i className=\"fa fa-edit\"></i>&nbsp;<span>Edit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></Button> : null}\r\n\r\n        \r\n        <Table data={dataMenuAll} jumlahdata={jumlahdata} groupName={\"\"}></Table>\r\n        <Dialog open={open} actionForm={actionForm}></Dialog>\r\n\r\n\r\n    </div>    \r\n    );\r\n})\r\n\r\nexport default Depart;","import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport React from 'react';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nexport default () => (\r\n  <Tabs>\r\n    <TabList>\r\n      <Tab>Add 1 <ClearIcon></ClearIcon> </Tab>\r\n      <Tab>Edit 2  <ClearIcon></ClearIcon></Tab>\r\n    </TabList>\r\n\r\n    <TabPanel>\r\n      <h2>Any content 1</h2>\r\n    </TabPanel>\r\n    <TabPanel>\r\n      <h2>Any content 2</h2>\r\n    </TabPanel>\r\n  </Tabs>\r\n);"],"sourceRoot":""}