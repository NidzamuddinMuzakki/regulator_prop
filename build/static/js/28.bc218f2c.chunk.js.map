{"version":3,"sources":["components/popupAll/index.js","components/TableMenu/index.js","views/Adapro/Credential/Menu/index.js","components/tabkomponen/tabs.js"],"names":["icon","react_default","a","createElement","CheckBoxOutlineBlank_default","fontSize","checkedIcon","CheckBox_default","useStyles","makeStyles","theme","root","back","background","paper","height","width","control","padding","spacing","popup","&:hover","boxShadow","DialogTitle","withStyles","margin","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","Object","objectWithoutProperties","assign","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","_React$useState9","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","_React$useState3","_React$useState4","Date","prototype","toDateInputValue","local","this","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","useSelector","state","userSettingSelected","_React$useState5","_React$useState6","dataGroup","setDataGroup","_React$useState7","dept_name","dept_id","role_name","role_id","group_name","group_id","branch_id","branch_name","menu_id","report_id","module_id","menu_url","defineProperty","_React$useState8","dataChange","setDataChange","actionForm","selected","popupDepart","isOpen","popupGroup","getDepartDetail","useCallback","id","token","localStorage","getItem","API","post","key","info_data","then","data","uaja","getBranchDetail","getGroupDetail","console","log","getMenuDetail","menu_desc","getRoleDetail","info_role","getGroup","kirimuserselected","jumlah","type","payload","selectedUser","selectedId","dispatch","useDispatch","kirimisOpen","handleChange","e","objectSpread2","target","name","value","resetForm","_setDataChange","handleClose","memo","useEffect","Dialog","fullWidth","maxWidth","style","aria-labelledby","popupAll_DialogTitle","display","Paper","justifyContent","alignItems","Person_default","marginLeft","lineHeight","fontFamily","popupAll_DialogContent","Grid","container","item","xs","TextField","label","onChange","placeholder","marginTop","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","renderOption","_ref","Fragment","Checkbox","marginRight","checked","renderInput","params","popupAll_DialogActions","Button","autoFocus","alert","catch","err","descendingComparator","b","orderBy","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","indeterminateIcon","RemoveCircle_default","RadioButtonUnchecked_default","CheckCircle_default","indeterminate","inputProps","numeric","disablePadding","map","headCell","sortDirection","useToolbarStyles","paddingLeft","paddingRight","highlight","backgroundColor","text","primary","secondary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","component","marginBottom","table","minWidth","tableRow","&$selected,&$hover:hover","hover","visuallyHidden","border","clip","overflow","EnhancedTable","hiding","setHiding","setOrder","setOrderBy","setSelected","_React$useState10","page","setPage","_React$useState11","_React$useState12","dense","setDense","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","no","menuDesc","menuUrl","crtDate","updDate","rows","dataUser","i","length","created_time","updated_time","handleLeave","nodeName","parentNode","handleEnter","Math","min","TableMenu_EnhancedTableToolbar","TableContainer","Table","size","event","newSelecteds","n","property","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","row","isItemSelected","indexOf","labelId","concat","cursor","onMouseEnter","onMouseLeave","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","Switch","Depart","_useState","_useState2","dataMenuAll","setDataMenuAll","_useState3","_useState4","_useState5","_useState6","setActionForm","_useState7","_useState8","jumlahdata","setJumlahData","dataSelected","popupMenu","rowperpageGroup","rowperpageMenu","kirimisOpenDepart","kirimSelected","rowAdd","rowEdit","rowDelete","fetches","hasil","_loop","push","Promise","all","getMenuAll","halaman","per_page","count_data","groupName","popupAll","__webpack_require__"],"mappings":"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","file":"static/js/28.bc218f2c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles, useStyle, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport API from './../../api/api';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useEffect } from 'react';\r\nimport set from 'core-js/es6/set';\r\nimport DatePicker from './../datepicker/index';\r\nimport { connect } from 'react-redux';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { popupDepart } from '../../reducers/PopAll';\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n   \r\n  },\r\n  back:{\r\n    background:\"#ebeff1\"\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  popup:{\r\n    \"&:hover\":{\r\n      boxShadow: \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\"\r\n    }\r\n  }\r\n}));\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [open, setOpen] = React.useState(false);\r\n  const [label, setLabel] = React.useState([]);\r\n//   console.log(open)\r\n  Date.prototype.toDateInputValue = (function () {\r\n    var local = new Date(this);\r\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n    return local.toJSON().slice(0, 10);\r\n  });\r\n  \r\n\r\n  const selectedusersetting = useSelector(state => state.userSettingSelected);\r\n  \r\n  // const [username, setUsername] = React.useState(\"\");\r\n  // const [password, setPassword] = React.useState(\"\");\r\n  // const [name, setName] = React.useState(\"\");\r\n  // const [userid, setUserId] = React.useState(\"\");\r\n  const [dataGroup, setDataGroup] = React.useState([]);\r\n  \r\n  // const [nik, setNik] = React.useState(\"\");\r\n  // const [depart, setDepart] = React.useState(0);\r\n  // const [role, setRole] = React.useState(0);\r\n  // const [periode, setPeriode] = React.useState(0);\r\n  // const [branch, setBranch] = React.useState(0);\r\n  // const [expired, setExpired] = React.useState(\"\");\r\n  // const [status, setStatus] = React.useState(\"\");\r\n  const [dataChange, setDataChange] = React.useState({\r\n   dept_name:'',\r\n   dept_id:'',\r\n   role_name:'',\r\n   role_id:'',\r\n   group_name:'',\r\n   group_id:'',\r\n   branch_id:'',\r\n   branch_name:'',\r\n   menu_id:'',\r\n   report_id:'',\r\n   module_id:'',\r\n   menu_url:'',\r\n   menu_id:'',\r\n   menu_desc:'',\r\n  })\r\n  \r\n\r\n \r\n  let actionForm = props.actionForm;\r\n \r\n \r\n  const isOpenDepart = useSelector(state=>state.popupDepart.isOpen)\r\n  const isOpenGroup = useSelector(state=>state.popupGroup.isOpen)\r\n  \r\n  const selected = useSelector(state => state.userSettingSelected);\r\n  \r\n  const getDepartDetail = React.useCallback((id) => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_department\", {\r\n      key: token,\r\n      dept_id: id,\r\n      info_data: \"detail\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n      \r\n      setDataChange({\r\n            dept_name:uaja[\"Department Name\"],\r\n            // dept_id:data.data.data.dept_id,\r\n            group_id:uaja[\"Group Id\"]\r\n        }) \r\n    })\r\n    \r\n    },[setDataChange]  ) \r\n    const getBranchDetail = React.useCallback((id) => {  //on startup function\r\n        let token = localStorage.getItem('id_token');\r\n    \r\n        API.post(\"get_branch\", {\r\n          key: token,\r\n          branch_id: id,\r\n          info_data: \"detail\"\r\n        }).then(data => {\r\n          let uaja = data.data.data;\r\n          \r\n          setDataChange({\r\n                branch_name:data.data.data.branch_name,\r\n                branch_id:data.data.data.branch_id,\r\n                \r\n            }) \r\n        })\r\n        \r\n    },[setDataChange])\r\n\r\nconst getGroupDetail = React.useCallback((id) => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_group\", {\r\n      key: token,\r\n      group_id: id,\r\n      info_data: \"detail\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n      console.log(uaja)\r\n      setDataChange({\r\n            group_name:uaja[\"Group Name\"],\r\n            group_id:uaja[\"Group Id\"]\r\n        }) \r\n    })\r\n    \r\n},[setDataChange])\r\nconst getMenuDetail = React.useCallback((id) => {  //on startup function\r\n  let token = localStorage.getItem('id_token');\r\n\r\n  API.post(\"get_menu\", {\r\n    key: token,\r\n    menu_id: id,\r\n    info_data: \"detail\"\r\n  }).then(data => {\r\n    let uaja = data.data.data;\r\n    \r\n    setDataChange({\r\n          menu_url:data.data.data.menu_url,\r\n          menu_id:data.data.data.menu_id,\r\n          menu_desc:data.data.data.menu_desc\r\n      }) \r\n  })\r\n  \r\n},[setDataChange])\r\nconst getRoleDetail = React.useCallback((id) => {  //on startup function\r\n  let token = localStorage.getItem('id_token');\r\n\r\n  API.post(\"get_role\", {\r\n    key: token,\r\n    role_id: id,\r\n    info_role: \"detail\"\r\n  }).then(data => {\r\n    let uaja = data.data.data;\r\n    \r\n    setDataChange({\r\n          role_name:data.data.data.role_name,\r\n          role_id:data.data.data.role_id,\r\n          menu_id:data.data.data.menu_id,\r\n          module_id:data.data.data.module_id,\r\n          report_id:data.data.data.report_id\r\n      }) \r\n  })\r\n  \r\n},[setDataChange])\r\n\r\n\r\n\r\n\r\n    \r\n      // setUserId(data.data.data.user_id)\r\n      // setUsername(data.data.data.username)\r\n      // setPassword(data.data.data.password)\r\n      // setName(data.data.data.name)\r\n      // setNik(data.data.data.nik)\r\n      // setPeriode(data.data.data.periode_usage)\r\n      // setStatus(data.data.data.status_date)\r\n      // setExpired(data.data.data.expired_date)\r\n      // setBranch(data.data.data.branch_id)\r\n      // setRole(data.data.data.role_id)\r\n      // setDepart(data.data.data.dept_id)\r\n      // setGroup(data.data.data.group_id)\r\n      // this.setState({\r\n      //   dataSet: data.data.data\r\n      // });\r\n\r\n\r\nconst getGroup = React.useCallback(() => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_group\", {\r\n      key: token,\r\n      info_data: \"all\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n      setDataGroup(data.data.data)\r\n    })\r\n},[setDataGroup])\r\n  const kirimuserselected = (jumlah, data) => {\r\n    return {\r\n      type: \"SELECTEDUSER\",\r\n      payload: {\r\n        selectedUser: jumlah,\r\n        selectedId: data\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  const dispatch = useDispatch();\r\n  const kirimisOpen = (isOpen, type) => {\r\n    return {\r\n      type: type,\r\n      payload: {\r\n        isOpen: isOpen,\r\n      }\r\n    }\r\n  }\r\n  const convert = (name, value) => ({\r\n    target: {\r\n      name, value\r\n    }\r\n  })\r\n  const handleSubmitUser = (e) => {\r\n\r\n   \r\n    let token = localStorage.getItem('id_token');\r\n    // console.log(role);\r\n    // dispatch(kirimuserselected(0, []))\r\n    if (actionForm == \"Edit Department\") {\r\n      API.post(\"update_department\", {\r\n        key: token,\r\n        dept_id:dataChange.dept_id,\r\n        dept_name:dataChange.dept_name,\r\n        group_id:dataChange.group_id\r\n\r\n      }).then(data => {\r\n\r\n        // console.log(data.data)\r\n        alert(\"berhasil Mengubah\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n        // this.setState({\r\n        //   dataSet: data.data.data\r\n        // });\r\n\r\n      }).catch((err) => {\r\n        alert(\"Anda Bukan Admin\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n      })\r\n    } else  if (actionForm == \"Add Department\") {\r\n      API.post(\"create_department\", {\r\n        key: token,\r\n        \r\n        dept_id:dataChange.dept_id,\r\n        dept_name:dataChange.dept_name,\r\n        group_id:dataChange.group_id\r\n\r\n      }).then(data => {\r\n\r\n        // console.log(data.data)\r\n        alert(\"berhasil menambah\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n        // this.setState({\r\n        //   dataSet: data.data.data\r\n        // });\r\n\r\n      })\r\n    }\r\n    else  if (actionForm == \"Add Branch\") {\r\n        API.post(\"create_branch\", {\r\n          key: token,\r\n          \r\n          branch_id:dataChange.branch_id,\r\n          branch_name:dataChange.branch_name,\r\n         \r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else  if (actionForm == \"Add Role\") {\r\n        API.post(\"create_role\", {\r\n          key: token,\r\n          \r\n          role_id:dataChange.role_id,\r\n          role_name:dataChange.role_name,\r\n          menu_id:dataChange.menu_id,\r\n          report_id:dataChange.report_id,\r\n          module_id:dataChange.module_id,\r\n         \r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Role\") {\r\n        API.post(\"update_role\", {\r\n          key: token,\r\n        \r\n          role_id:dataChange.role_id,\r\n          role_name:dataChange.role_name,\r\n          menu_id:dataChange.menu_id,\r\n          report_id:dataChange.report_id,\r\n          module_id:dataChange.module_id,\r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n        })\r\n      }\r\n    else  if (actionForm == \"Add Group\") {\r\n        API.post(\"create_group\", {\r\n          key: token,\r\n          \r\n         \r\n          group_name:dataChange.group_name,\r\n          group_id:dataChange.group_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else  if (actionForm == \"Add Menu\") {\r\n        API.post(\"create_menu\", {\r\n          key: token,\r\n          \r\n         \r\n          menu_id:dataChange.menu_id,\r\n          menu_desc:dataChange.menu_desc,\r\n          menu_url:dataChange.menu_url\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Menu\") {\r\n        API.post(\"update_menu\", {\r\n          key: token,\r\n          menu_id:dataChange.menu_id,\r\n          menu_desc:dataChange.menu_desc,\r\n          menu_url:dataChange.menu_url\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n        })\r\n      }\r\n     else if (actionForm == \"Edit Group\") {\r\n        API.post(\"update_group\", {\r\n          key: token,\r\n        \r\n          group_name:dataChange.group_name,\r\n          group_id:dataChange.group_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Branch\") {\r\n        API.post(\"update_branch\", {\r\n          key: token,\r\n        \r\n          branch_name:dataChange.branch_name,\r\n          branch_id:dataChange.branch_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n        })\r\n      }\r\n\r\n  }\r\n  const handleChange = React.useCallback((e) => {\r\n\r\n      setDataChange({\r\n        ...dataChange,\r\n        [e.target.name]:e.target.value \r\n      })\r\n    // let etarget = e.target.name;\r\n    // console.log(e.target.name)\r\n    // if (etarget == \"username\") {\r\n    //   setDataChange({\r\n    //     username:e.target.value\r\n    //   })\r\n    // }\r\n    // else if (etarget == \"password\") {\r\n    //     setDataChange({\r\n    //       password:e.target.value\r\n\r\n    //     } )\r\n    // }\r\n    // }  else if (etarget == \"nik\") {\r\n    //   setNik(e.target.value)\r\n    // } else if (etarget == \"name\") {\r\n    //   setName(e.target.value)\r\n    // } else if (etarget == \"depart\") {\r\n    //   setDepart(e.target.value)\r\n    // } else if (etarget == \"userid\") {\r\n    //   setUserId(e.target.value)\r\n    // } else if (etarget == \"group\") {\r\n    //   setGroup(e.target.value)\r\n    // } else if (etarget == \"role\") {\r\n    //   setRole(e.target.value)\r\n    // } else if (etarget == \"branch\") {\r\n    //   console.log(e.target.value)\r\n    //   setBranch(e.target.value)\r\n    // }\r\n    // else if (etarget == \"periode\") {\r\n    //   console.log(e.target.name)\r\n    //   setPeriode(e.target.value)\r\n    // } else if (etarget == \"expired\") {\r\n    //   setExpired(e.target.value)\r\n    // } else if (etarget == \"status\") {\r\n    //   setStatus(e.target.value)\r\n    // }\r\n\r\n\r\n \r\n  }, [dataChange])\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const resetForm = React.useCallback(() => {\r\n    setDataChange({\r\n     \r\n        dept_name:'',\r\n        dept_id:'',\r\n        role_name:'',\r\n        role_id:'',\r\n        group_name:'',\r\n        group_id:'',\r\n        branch_id:'',\r\n        branch_name:'',\r\n        menu_id:'',\r\n        report_id:'',\r\n        module_id:'',\r\n        menu_url:'',\r\n        menu_id:'',\r\n        menu_desc:'',\r\n   \r\n    })\r\n    dispatch(kirimuserselected(0,[]))\r\n  },[setDataChange]);\r\n \r\n  const Form  = React.memo((props)=>{\r\n      return (\r\n          <div>\r\n                 \r\n\r\n          </div>\r\n      )\r\n  })\r\n  const handleClose = React.useCallback(() => {\r\n    \r\n    if(props.actionForm==\"Add Department\"||props.actionForm==\"Edit Department\"){\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n       \r\n\r\n    }else if(props.actionForm==\"Add Group\" || props.actionForm==\"Edit Group\"){\r\n        dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n        \r\n    }\r\n    else if(props.actionForm==\"Add Branch\" || props.actionForm==\"Edit Branch\"){\r\n        dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n        \r\n    }\r\n    else if(props.actionForm==\"Add Role\" || props.actionForm==\"Edit Role\"){\r\n      dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n    }\r\n    else if(props.actionForm==\"Add Menu\" || props.actionForm==\"Edit Menu\"){\r\n      dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n    }\r\n    dispatch(kirimuserselected(0,[]))\r\n    setOpen(false);\r\n    resetForm();\r\n\r\n  },[open]);\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open)\r\n   \r\n   \r\n    if(actionForm==\"Edit Department\" || actionForm==\"Add Department\"){\r\n        getGroup();\r\n        if (actionForm == \"Add Department\") {\r\n        \r\n            resetForm();\r\n            // console.log(open)\r\n        //   let id = selectedusersetting.selectedId[0];\r\n        //   getUserDetail(id);\r\n        } else if(actionForm == \"Edit Department\") {\r\n            resetForm();\r\n        \r\n          if(selected.selectedUser==1){\r\n              getDepartDetail(selected.selectedId[0]);\r\n          }\r\n        }\r\n    }else if(actionForm==\"Edit Group\" || actionForm==\"Add Group\"){\r\n        if (actionForm == \"Add Group\") {\r\n        \r\n            resetForm();\r\n            // console.log(open)\r\n        //   let id = selectedusersetting.selectedId[0];\r\n        //   getUserDetail(id);\r\n        } else if(actionForm == \"Edit Group\") {\r\n            resetForm();\r\n        \r\n          if(selected.selectedUser==1){\r\n              getGroupDetail(selected.selectedId[0]);\r\n          }\r\n    }\r\n    \r\n}else if(actionForm==\"Edit Branch\" || actionForm==\"Add Branch\"){\r\n    if (actionForm == \"Add Branch\") {\r\n    \r\n        resetForm();\r\n        // console.log(open)\r\n    //   let id = selectedusersetting.selectedId[0];\r\n    //   getUserDetail(id);\r\n    } else if(actionForm == \"Edit Branch\") {\r\n        resetForm();\r\n    \r\n      if(selected.selectedUser==1){\r\n          getBranchDetail(selected.selectedId[0]);\r\n      }\r\n}\r\n}\r\nelse if(actionForm==\"Edit Role\" || actionForm==\"Add Role\"){\r\n  if (actionForm == \"Add Role\") {\r\n  \r\n      resetForm();\r\n      // console.log(open)\r\n  //   let id = selectedusersetting.selectedId[0];\r\n  //   getUserDetail(id);\r\n  } else if(actionForm == \"Edit Role\") {\r\n      resetForm();\r\n  \r\n    if(selected.selectedUser==1){\r\n        getRoleDetail(selected.selectedId[0]);\r\n    }\r\n}\r\n\r\n\r\n}\r\nelse if(actionForm==\"Edit Menu\" || actionForm==\"Add Menu\"){\r\n  if (actionForm == \"Add Menu\") {\r\n  \r\n      resetForm();\r\n      // console.log(open)\r\n  //   let id = selectedusersetting.selectedId[0];\r\n  //   getUserDetail(id);\r\n  } else if(actionForm == \"Edit Menu\") {\r\n      resetForm();\r\n  \r\n    if(selected.selectedUser==1){\r\n        getMenuDetail(selected.selectedId[0]);\r\n    }\r\n}}\r\n\r\n    \r\n\r\n  }, [props.open])\r\n  const value = \"ACCU-SEAL 35-532 Bag Sealer\";\r\n  return (\r\n    <div >\r\n\r\n      <Dialog\r\n     \r\n        fullWidth={true}\r\n        maxWidth=\"sm\" style={{ }}  onClose={handleClose}  aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle style={{ }} id=\"customized-dialog-title\" onClose={handleClose}>\r\n          <div style={{ display: \"flex\", }}>\r\n            <Paper style={{ width: \"50px\", height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><PersonIcon ></PersonIcon></Paper>\r\n            <div style={{width: \"300px\", height: \"50px\",  marginLeft:\"10px\",alignItems:\"center\",justifyContent:\"center\" }}>\r\n                \r\n                  <span color=\"primary\" style={{display: \"flex\",lineHeight: \"50px\", fontFamily:\"revert\", color:\"primary\",}}  >{props.actionForm}</span>\r\n                 \r\n            </div> \r\n\r\n          </div>\r\n\r\n        </DialogTitle>\r\n\r\n        <DialogContent className={classes.root}  >\r\n          <Grid container spacing={1} style={{display:'flex', justifyContent:'center', alignItems:'center' ,}} >\r\n\r\n\r\n            <Grid item xs={8}   style={{width:\"100%\",boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\", padding:'10px'}} >\r\n            \r\n               \r\n             {actionForm==\"Edit Department\"||actionForm==\"Add Department\"?\r\n                <div>\r\n                 <TextField\r\n                 style={{ width:\"100%\"}}\r\n                 label={\"Departement Id\"}\r\n                 onChange={handleChange}\r\n                 placeholder=\"User Id\"\r\n                 variant=\"outlined\"\r\n                 name={\"dept_id\"}\r\n                 type=\"number\"\r\n                 value={dataChange.dept_id}\r\n                 \r\n                 // error={touched && invalid}\r\n                 // helperText={touched && error}\r\n                 // {...input}\r\n                 // {...custom}\r\n                 />                             \r\n                  <TextField\r\n                 style={{ width:\"100%\", marginTop:\"10px\"}}\r\n                 label={\"Department Name\"} \r\n                 onChange={handleChange}\r\n                 variant=\"outlined\"\r\n                 name={\"dept_name\"}\r\n                 value={dataChange.dept_name} ></TextField>\r\n                 {/* <Autocomplete\r\n                 \r\n                \r\n                  options={dataGroup}\r\n                multiple\r\n                filterSelectedOptions\r\n                  value={dataChange.group_id?dataGroup.find(v => v[\"Group Id\"] == dataChange.group_id):''}\r\n                  // getOptionSelected ={(option, value) => option === value?option:''}\r\n                  getOptionLabel={(option) => option[\"Group Name\"]?option[\"Group Name\"]:\"\"}\r\n                  onChange={(e, value) => handleChange(convert(\"group_id\", value ? value[\"Group Id\"] : ''))}\r\n                  renderInput={(\r\n                    params) => <TextField name=\"depart\" style={{ marginTop: \"10px\", }} {...params} label=\"Group\" variant=\"outlined\" />}\r\n                /> */}\r\n\r\n                 <Autocomplete\r\n      multiple\r\n      id=\"checkboxes-tags-demo\"\r\n      options={dataGroup}\r\n      disableCloseOnSelect\r\n      getOptionLabel={(option) => option[\"Group Name\"]}\r\n      renderOption={(option, { selected }) => (\r\n        <React.Fragment>\r\n          <Checkbox\r\n            icon={icon}\r\n            checkedIcon={checkedIcon}\r\n            style={{ marginRight: 8 }}\r\n            checked={selected}\r\n          />\r\n          {option[\"Group Name\"]}\r\n        </React.Fragment>\r\n      )}\r\n      style={{ width:\"100%\", marginTop:\"10px\"}}\r\n      renderInput={(params) => (\r\n        <TextField {...params} variant=\"outlined\" label=\"Group\" placeholder=\"Group\" />\r\n      )}></Autocomplete>\r\n                 </div>\r\n             :actionForm==\"Edit Group\"||actionForm==\"Add Group\"?\r\n             <div>\r\n                   <TextField\r\n                 style={{ width:\"100%\"}}\r\n                 label={\"Group ID\"}\r\n                 onChange={handleChange}\r\n                 variant=\"outlined\"\r\n                 name={\"group_id\"}\r\n                 type=\"number\"\r\n                 value={dataChange.group_id}\r\n                 \r\n                 // error={touched && invalid}\r\n                 // helperText={touched && error}\r\n                 // {...input}\r\n                 // {...custom}\r\n                 />                             \r\n                  <TextField\r\n                 style={{ width:\"100%\", marginTop:\"10px\"}}\r\n                 label={\"Group Name\"} \r\n                 onChange={handleChange}\r\n                 variant=\"outlined\"\r\n                 name={\"group_name\"}\r\n                 value={dataChange.group_name} ></TextField>\r\n             </div>\r\n             \r\n             :actionForm==\"Edit Branch\"||actionForm==\"Add Branch\"?\r\n             <div>\r\n             <TextField\r\n           style={{ width:\"100%\"}}\r\n           label={\"Branch ID\"}\r\n           onChange={handleChange}\r\n           variant=\"outlined\"\r\n           name={\"branch_id\"}\r\n           type=\"number\"\r\n           value={dataChange.branch_id}\r\n           \r\n           // error={touched && invalid}\r\n           // helperText={touched && error}\r\n           // {...input}\r\n           // {...custom}\r\n           />                             \r\n            <TextField\r\n           style={{ width:\"100%\", marginTop:\"10px\"}}\r\n           label={\"Branch Name\"} \r\n           onChange={handleChange}\r\n           variant=\"outlined\"\r\n           name={\"branch_name\"}\r\n           value={dataChange.branch_name} ></TextField>\r\n       </div> :actionForm==\"Edit Role\"||actionForm==\"Add Role\"?\r\n         <div>\r\n         <TextField\r\n       style={{ width:\"100%\"}}\r\n       label={\"Role ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"role_id\"}\r\n       type=\"number\"\r\n       value={dataChange.role_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />                             \r\n        <TextField\r\n       style={{ width:\"100%\", marginTop:\"10px\"}}\r\n       label={\"Role Name\"} \r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"role_name\"}\r\n       value={dataChange.role_name} ></TextField>\r\n        <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Module ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"module_id\"}\r\n       type=\"number\"\r\n       value={dataChange.module_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />           \r\n        <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Report ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"report_id\"}\r\n       type=\"number\"\r\n       value={dataChange.report_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />     \r\n        <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Menu ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_id\"}\r\n       type=\"number\"\r\n       value={dataChange.menu_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />                 \r\n   </div> \r\n       \r\n       :actionForm==\"Edit Menu\"||actionForm==\"Add Menu\"?\r\n       <div>\r\n       <TextField\r\n       style={{ width:\"100%\", marginTop:\"10px\"}}\r\n       label={\"Menu ID\"} \r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_id\"}\r\n       type={\"number\"}\r\n       value={dataChange.menu_id} ></TextField>\r\n        <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Menu Description\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_desc\"}\r\n       type=\"text\"\r\n       value={dataChange.menu_desc}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />           \r\n        <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Menu Url\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_url\"}\r\n       type=\"text\"\r\n       value={dataChange.menu_url}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />     \r\n     \r\n       </div>  \r\n       :''}\r\n              </Grid>\r\n\r\n            \r\n            \r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions style={{}}>\r\n          <Button className={classes.popup} autoFocus onClick={handleSubmitUser} >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport set from 'core-js/es6/set';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport Tabs from  '../tabkomponen/tabs.js';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  // console.log(\"hay\"+props.data)\r\n  const headCells = [\r\n    { id: 'no', numeric: true, disablePadding: true, label: 'No' },\r\n    { id: 'menu_id', numeric: false, disablePadding: false, label: 'Menu ID' },\r\n    { id: 'description', numeric: false, disablePadding: false, label: 'Description' },\r\n    { id: 'url', numeric: false, disablePadding: false, label: 'URL' },\r\n    { id: 'created_time', numeric: false, disablePadding: false, label: 'Created Time' },\r\n    { id: 'updated_time', numeric: false, disablePadding: false, label: 'Updated Time' },\r\n \r\n\r\n\r\n  ];\r\n  \r\n  return (\r\n  \r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n           color = \"primary\"\r\n           indeterminateIcon={<RemoveCircleIcon/>}\r\n           icon={<RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>}\r\n           checkedIcon={<CheckCircleIcon></CheckCircleIcon>}\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n           \r\n            padding={'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n           \r\n              {headCell.label}\r\n             \r\n           \r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: \"#0078d4\",\r\n        backgroundColor: \"#c7e0f4\",\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {props.name}\r\n        </Typography>\r\n      )}\r\n\r\n      {/* {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )} */}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableRow: {\r\n    \r\n    \"&$selected,&$hover:hover\": {\r\n      backgroundColor: \"#c7e0f4\"\r\n    },\r\n    \r\n  },\r\n  // tableCell: {\r\n  //   \"$hover:hover &\": {\r\n  //     color: \"pink\"\r\n  //   }\r\n  \r\n  hover: {},\r\n  selected: {},\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const selectedusersetting = useSelector(state =>state.userSettingSelected);\r\n  const dispatch = useDispatch();\r\n  const [hiding, setHiding] = React.useState(\"none\");\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  let deptName = [];\r\n  \r\n  function createData(id,no,menuDesc,menuUrl, crtDate, updDate) {\r\n    return { id,no,menuDesc,menuUrl,crtDate, updDate };\r\n  }\r\n  const rows = [];\r\n  \r\n  let dataUser = props.data;\r\n// console.log(props.deptName[0])\r\n  for(let i=0;i<dataUser.length;i++){\r\n    rows[i] = createData(dataUser[i].menu_id,(i+1),dataUser[i].menu_desc,dataUser[i].menu_url ,dataUser[i].created_time, dataUser[i].updated_time);\r\n    \r\n  }\r\n\r\n  \r\n  \r\n\r\n\r\n  const kirimuserselected = (jumlah, data)=>{\r\n    return{\r\n      type:\"SELECTEDUSER\",\r\n      payload:{\r\n        selectedUser: jumlah,\r\n        selectedId:data\r\n      }\r\n    }\r\n  }\r\n  let handleLeave = (e)=>{\r\n    \r\n    if(e.target.nodeName==\"INPUT\"){\r\n      e.target.parentNode.parentNode.style.display=\"none\";\r\n    }\r\n    else if(e.target.parentNode==null){\r\n\r\n    }else if(e.target.parentNode.children[0]==null){\r\n\r\n    }else if(e.target.parentNode.children[0].children[0]==null){\r\n\r\n    }\r\n    else{\r\n      e.target.parentNode.children[0].children[0].style.display=\"none\";\r\n    }\r\n  }\r\n  let handleEnter = (e)=>{\r\n    if(e.target.parentNode==null){\r\n\r\n    }else if(e.target.parentNode.children[0]==null){\r\n\r\n    }else if(e.target.parentNode.children[0].children[0]==null){\r\n\r\n    }else{\r\n      e.target.parentNode.children[0].children[0].style.display=\"block\";\r\n    }\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if(selected.length>0){\r\n      dispatch(kirimuserselected(0,[]))\r\n      setSelected([]);\r\n    }\r\n    else if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      let jumlah = newSelecteds.length;\r\n      \r\n   \r\n      dispatch(kirimuserselected(jumlah,newSelecteds))\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    dispatch(kirimuserselected(0,[]))\r\n    setSelected([]);\r\n  };\r\n  useEffect(()=>{\r\n    if(selected.length>0){\r\n      setHiding(\"block\");\r\n     \r\n\r\n        \r\n      \r\n    }else{\r\n      setHiding(\"none\")\r\n    }\r\n   \r\n  },[selected])\r\n  useEffect(()=>{\r\n    setSelected([]);\r\n  }, [props.data])\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    \r\n    \r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    let jumlah = newSelected.length;\r\n\r\n   \r\n    dispatch(kirimuserselected(jumlah,newSelected))\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  // console.log(rows)\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n      {/* <Tabs>\r\n        <div label=\"Gator\">\r\n          See ya later, <em>Alligator</em>!\r\n        </div>\r\n        <div label=\"Croc\">\r\n          After 'while, <em>Crocodile</em>!\r\n        </div>\r\n        <div label=\"Sarcosuchus\">\r\n          Nothing to see here, this tab is <em>extinct</em>!\r\n        </div>\r\n      </Tabs> */}\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              \r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  \r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${row.id}`;\r\n                  \r\n                  return (\r\n                    <TableRow\r\n                      id=\"rowcheck\"\r\n                      hover\r\n                      className={classes.tableRow}\r\n                      classes={{ hover: classes.hover, selected:classes.selected }}\r\n                      style={{cursor:\"pointer\"}}\r\n                      onMouseEnter={selected.length==0?handleEnter:null}\r\n                      onMouseLeave={selected.length==0?handleLeave:null}\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell  padding=\"checkbox\">\r\n                        <Checkbox style={{display:hiding}}\r\n                          checked={isItemSelected}\r\n                          icon={<RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>}\r\n                          checkedIcon={<CheckCircleIcon></CheckCircleIcon>}\r\n                          color = \"primary\"\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell >\r\n                        {row.no}\r\n                      </TableCell>\r\n                      <TableCell  >\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell  >{row.menuDesc}</TableCell>\r\n                      <TableCell  >{row.menuUrl}</TableCell>\r\n                      <TableCell  >{row.crtDate}</TableCell>\r\n                      <TableCell  >{row.updDate}</TableCell>\r\n                      \r\n                      \r\n                      \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            \r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React,{useState, useEffect} from 'react';\r\nimport API from 'api';\r\nimport {Paper} from '@material-ui/core'\r\nimport Table from './../../../../components/TableMenu'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Button} from 'reactstrap'\r\nimport { AlternateEmail } from '@material-ui/icons';\r\nimport Dialog from './../../../../components/popupAll'\r\n   \r\n\r\nconst Depart = React.memo(() =>{\r\n    let token = localStorage.getItem('id_token');\r\n    const [dataMenuAll, setDataMenuAll] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [actionForm, setActionForm] = useState('');\r\n    const [jumlahdata, setJumlahData] = useState(0);\r\n    const dataSelected = useSelector(state=>state.userSettingSelected);\r\n    const popupDepart = useSelector(state=>state.popupMenu.isOpen);\r\n    const rowperpageGroup = useSelector(state=>state.rowperpageMenu);\r\n    const dispatch = useDispatch();\r\n    const kirimisOpenDepart = (isOpen) => {\r\n        return {\r\n          type: \"OPENMENU\",\r\n          payload: {\r\n            isOpen: isOpen,\r\n          }\r\n        }\r\n      }\r\n     \r\n      const kirimSelected = (jumlah, data) => {\r\n        return {\r\n          type: \"SELECTEDUSER\",\r\n          payload: {\r\n            selectedUser: jumlah,\r\n            selectedId:data\r\n          }\r\n        }\r\n      }  \r\n      useEffect(()=>{\r\n        dispatch(kirimSelected(0,[]))\r\n      }, [])\r\n    const rowAdd =  React.useCallback(()=>{\r\n        dispatch(kirimisOpenDepart(true))\r\n        setOpen(true);\r\n        setActionForm(\"Add Menu\")\r\n    },[dataSelected])\r\n    const rowEdit = React.useCallback(()=>{\r\n        if(dataSelected.selectedUser==0){\r\n            alert(\"no item selected\")\r\n        }else{\r\n            dispatch(kirimisOpenDepart(true))\r\n            setOpen(true);\r\n            setActionForm(\"Edit Menu\")\r\n\r\n        }\r\n    },[dataSelected])\r\n    const rowDelete = React.useCallback(()=>{\r\n        if(dataSelected.selectedUser==0){\r\n            alert(\"no item selected\")\r\n        }else{\r\n            let hasil = \"\";\r\n            var fetches = [];\r\n            for(let i=0;i<dataSelected.selectedId.length;i++){\r\n                let token = localStorage.getItem('id_token');\r\n             \r\n                fetches.push(API.post(\"/credential_service/delete_menu\",{\r\n                  key: token,\r\n                  menu_id: dataSelected.selectedId[i]\r\n                }).then(data => {\r\n                hasil = hasil +\"Menu ID \"+dataSelected.selectedId[i]+\" \"+data.data.data+\"\\n\";\r\n             \r\n               \r\n              }).catch(err=>{\r\n                  alert(err)\r\n              })\r\n                )}\r\n\r\n            Promise.all(fetches).then(()=>{\r\n                alert(hasil);\r\n                getMenuAll();\r\n                dispatch(kirimSelected(0,[]));\r\n            })    \r\n        }\r\n\r\n    },[dataSelected])\r\n    const getMenuAll = React.useCallback((jumlah, halaman)=>{\r\n        API.post(\"/credential_service/get_menu\",{\r\n            key: token,\r\n            info_data:'all',\r\n            per_page:jumlah,\r\n            page:halaman\r\n        }).then(data => {\r\n            setDataMenuAll(data.data.data);\r\n            setJumlahData(data.data.count_data);\r\n           \r\n           \r\n          \r\n            \r\n          \r\n        })\r\n    },[setDataMenuAll])\r\n    useEffect(()=>{\r\n        getMenuAll(rowperpageGroup.jumlah, rowperpageGroup.halaman);\r\n        setOpen(popupDepart)\r\n       \r\n    },[popupDepart,rowperpageGroup.jumlah, rowperpageGroup.halaman])\r\n    return(\r\n    <div>\r\n        <Button  id=\"btnRowAdd\" className=\"btn-pill btn-outline-dark btn-m\" onClick={rowAdd}>&nbsp;&nbsp;<i className=\"fa fa-plus-square\"></i>&nbsp;<span>Add&nbsp;&nbsp;</span></Button>\r\n        {dataSelected.selectedUser>0?<Button  id=\"btnRowDelete\" className=\"btn-pill btn-outline-danger btn-m\" onClick={rowDelete}><i className=\"fa fa-window-close\"></i>&nbsp;<span>Delete</span></Button>:''}\r\n        {dataSelected.selectedUser==1?<Button color=\"warning\" id=\"btnTableEdit\" className=\"btn-pill btn-m\" onClick={rowEdit}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i className=\"fa fa-edit\"></i>&nbsp;<span>Edit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></Button> : null}\r\n\r\n        \r\n        <Table data={dataMenuAll} jumlahdata={jumlahdata} groupName={\"\"}></Table>\r\n        <Dialog open={open} actionForm={actionForm}></Dialog>\r\n\r\n\r\n    </div>    \r\n    );\r\n})\r\n\r\nexport default Depart;","import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport React from 'react';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nexport default () => (\r\n  <Tabs>\r\n    <TabList>\r\n      <Tab>Add 1 <ClearIcon></ClearIcon> </Tab>\r\n      <Tab>Edit 2  <ClearIcon></ClearIcon></Tab>\r\n    </TabList>\r\n\r\n    <TabPanel>\r\n      <h2>Any content 1</h2>\r\n    </TabPanel>\r\n    <TabPanel>\r\n      <h2>Any content 2</h2>\r\n    </TabPanel>\r\n  </Tabs>\r\n);"],"sourceRoot":""}