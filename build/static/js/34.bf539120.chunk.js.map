{"version":3,"sources":["views/Adapro/Dashboard/Dashboard.js"],"names":["brandPrimary","lazy","__webpack_require__","e","then","bind","getStyle","brandSuccess","brandInfo","cardChartData1","label","backgroundColor","borderColor","data","cardChartData2","CustomTooltips","Math","min","apply","max","random","floor","data1","data2","cust","acct","i","round","push","mainChart","labels","datasets","hexToRgba","pointHoverBackgroundColor","borderWidth","mainChartOpts","tooltips","enabled","custom","intersect","mode","position","callbacks","labelColor","tooltipItem","chart","datasetIndex","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","point","radius","hitRadius","hoverRadius","hoverBorderWidth","Dashboard","props","_this","Object","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","loading","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","toggle","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","onRadioBtnClick","state","dropdownOpen","radioSelected","setState","_this2","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","xs","sm","lg","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","id","isOpen","card1","reactstrap__WEBPACK_IMPORTED_MODULE_13__","caret","color","reactstrap__WEBPACK_IMPORTED_MODULE_14__","right","reactstrap__WEBPACK_IMPORTED_MODULE_15__","style","height","reactstrap__WEBPACK_IMPORTED_MODULE_16__","card2","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","aria-label","onClick","active","marginTop","react_chartjs_2__WEBPACK_IMPORTED_MODULE_6__","options","Component"],"mappings":"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","file":"static/js/34.bf539120.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from 'react';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonDropdown,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Progress,\r\n  Row,\r\n  Table,\r\n} from 'reactstrap';\r\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\r\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities'\r\n\r\nconst Widget03 = lazy(() => import('../Widgets/Widget03'));\r\n\r\nconst brandPrimary = getStyle('--primary')\r\nconst brandSuccess = getStyle('--success')\r\nconst brandInfo = getStyle('--info')\r\nconst brandWarning = getStyle('--warning')\r\nconst brandDanger = getStyle('--danger')\r\n\r\n// Card Chart 1\r\nconst cardChartData1 = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n  datasets: [\r\n    {\r\n      label: 'My First dataset',\r\n      backgroundColor: brandPrimary,\r\n      borderColor: 'rgba(255,255,255,.55)',\r\n      data: [65, 59, 84, 84, 51, 55, 40],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts1 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          color: 'transparent',\r\n          zeroLineColor: 'transparent',\r\n        },\r\n        ticks: {\r\n          fontSize: 2,\r\n          fontColor: 'transparent',\r\n        },\r\n\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n        ticks: {\r\n          display: false,\r\n          min: Math.min.apply(Math, cardChartData1.datasets[0].data) - 5,\r\n          max: Math.max.apply(Math, cardChartData1.datasets[0].data) + 5,\r\n        },\r\n      }],\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 1,\r\n    },\r\n    point: {\r\n      radius: 4,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n    },\r\n  }\r\n}\r\n\r\n\r\n// Card Chart 2\r\nconst cardChartData2 = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n  datasets: [\r\n    {\r\n      label: 'My First dataset',\r\n      backgroundColor: brandInfo,\r\n      borderColor: 'rgba(255,255,255,.55)',\r\n      data: [1, 18, 9, 17, 34, 22, 11],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts2 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          color: 'transparent',\r\n          zeroLineColor: 'transparent',\r\n        },\r\n        ticks: {\r\n          fontSize: 2,\r\n          fontColor: 'transparent',\r\n        },\r\n\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n        ticks: {\r\n          display: false,\r\n          min: Math.min.apply(Math, cardChartData2.datasets[0].data) - 5,\r\n          max: Math.max.apply(Math, cardChartData2.datasets[0].data) + 5,\r\n        },\r\n      }],\r\n  },\r\n  elements: {\r\n    line: {\r\n      tension: 0.00001,\r\n      borderWidth: 1,\r\n    },\r\n    point: {\r\n      radius: 4,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n    },\r\n  },\r\n};\r\n\r\n// Card Chart 3\r\nconst cardChartData3 = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n  datasets: [\r\n    {\r\n      label: 'My First dataset',\r\n      backgroundColor: 'rgba(255,255,255,.2)',\r\n      borderColor: 'rgba(255,255,255,.55)',\r\n      data: [78, 81, 80, 45, 34, 12, 40],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts3 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 2,\r\n    },\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n    },\r\n  },\r\n};\r\n\r\n// Card Chart 4\r\nconst cardChartData4 = {\r\n  labels: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],\r\n  datasets: [\r\n    {\r\n      label: 'My First dataset',\r\n      backgroundColor: 'rgba(255,255,255,.3)',\r\n      borderColor: 'transparent',\r\n      data: [78, 81, 80, 45, 34, 12, 40, 75, 34, 89, 32, 68, 54, 72, 18, 98],\r\n    },\r\n  ],\r\n};\r\n\r\nconst cardChartOpts4 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n        barPercentage: 0.6,\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n  },\r\n};\r\n\r\n// Social Box Chart\r\nconst socialBoxData = [\r\n  { data: [65, 59, 84, 84, 51, 55, 40], label: 'facebook' },\r\n  { data: [1, 13, 9, 17, 34, 41, 38], label: 'twitter' },\r\n  { data: [78, 81, 80, 45, 34, 12, 40], label: 'linkedin' },\r\n  { data: [35, 23, 56, 22, 97, 23, 64], label: 'google' },\r\n];\r\n\r\nconst makeSocialBoxData = (dataSetNo) => {\r\n  const dataset = socialBoxData[dataSetNo];\r\n  const data = {\r\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n    datasets: [\r\n      {\r\n        backgroundColor: 'rgba(255,255,255,.1)',\r\n        borderColor: 'rgba(255,255,255,.55)',\r\n        pointHoverBackgroundColor: '#fff',\r\n        borderWidth: 2,\r\n        data: dataset.data,\r\n        label: dataset.label,\r\n      },\r\n    ],\r\n  };\r\n  return () => data;\r\n};\r\n\r\nconst socialChartOpts = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3,\r\n    },\r\n  },\r\n};\r\n\r\n// sparkline charts\r\nconst sparkLineChartData = [\r\n  {\r\n    data: [35, 23, 56, 22, 97, 23, 64],\r\n    label: 'New Clients',\r\n  },\r\n  {\r\n    data: [65, 59, 84, 84, 51, 55, 40],\r\n    label: 'Recurring Clients',\r\n  },\r\n  {\r\n    data: [35, 23, 56, 22, 97, 23, 64],\r\n    label: 'Pageviews',\r\n  },\r\n  {\r\n    data: [65, 59, 84, 84, 51, 55, 40],\r\n    label: 'Organic',\r\n  },\r\n  {\r\n    data: [78, 81, 80, 45, 34, 12, 40],\r\n    label: 'CTR',\r\n  },\r\n  {\r\n    data: [1, 13, 9, 17, 34, 41, 38],\r\n    label: 'Bounce Rate',\r\n  },\r\n];\r\n\r\nconst makeSparkLineData = (dataSetNo, variant) => {\r\n  const dataset = sparkLineChartData[dataSetNo];\r\n  const data = {\r\n    labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\r\n    datasets: [\r\n      {\r\n        backgroundColor: 'transparent',\r\n        borderColor: variant ? variant : '#c2cfd6',\r\n        data: dataset.data,\r\n        label: dataset.label,\r\n      },\r\n    ],\r\n  };\r\n  return () => data;\r\n};\r\n\r\nconst sparklineChartOpts = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: true,\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n      }],\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 2,\r\n    },\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3,\r\n    },\r\n  },\r\n  legend: {\r\n    display: false,\r\n  },\r\n};\r\n\r\n// Main Chart\r\n\r\n//Random Numbers\r\nfunction random(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nvar elements = 27;\r\nvar data1 = [];\r\nvar data2 = [];\r\nvar data3 = [];\r\n\r\nvar cust = 20000;\r\nvar acct = 18000;\r\n\r\nfor (var i = 0; i <= elements; i++) {\r\n  //data1.push(random(50, 200));\r\n  //data2.push(random(80, 100));\r\n  //data3.push(65);\r\n  cust = Math.round(cust + (0.9*random(50, 200)))\r\n  acct = Math.round(acct + (1.1*random(50, 200)))\r\n  data1.push(cust)\r\n  data2.push(acct)\r\n}\r\n\r\nconst mainChart = {\r\n  //labels: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],\r\n  labels: ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],\r\n  datasets: [\r\n    {\r\n      label: 'Customer Data',\r\n      backgroundColor: hexToRgba(brandInfo, 10),\r\n      borderColor: brandInfo,\r\n      pointHoverBackgroundColor: '#fff',\r\n      borderWidth: 2,\r\n      data: data1,\r\n    },\r\n    {\r\n      label: 'Account Data',\r\n      backgroundColor: 'transparent',\r\n      borderColor: brandSuccess,\r\n      pointHoverBackgroundColor: '#fff',\r\n      borderWidth: 2,\r\n      data: data2,\r\n    },\r\n  ],\r\n};\r\n\r\nconst mainChartOpts = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips,\r\n    intersect: true,\r\n    mode: 'index',\r\n    position: 'nearest',\r\n    callbacks: {\r\n      labelColor: function(tooltipItem, chart) {\r\n        return { backgroundColor: chart.data.datasets[tooltipItem.datasetIndex].borderColor }\r\n      }\r\n    }\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          drawOnChartArea: false,\r\n        },\r\n      }],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n          maxTicksLimit: 5,\r\n          stepSize: Math.ceil(15000 / 3),\r\n          max: 25000,\r\n\t\t  min: 10000,\r\n        },\r\n      }],\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n      hoverBorderWidth: 3,\r\n    },\r\n  },\r\n};\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2,\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen,\r\n    });\r\n  }\r\n\r\n  onRadioBtnClick(radioSelected) {\r\n    this.setState({\r\n      radioSelected: radioSelected,\r\n    });\r\n  }\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <Card className=\"text-white bg-info\">\r\n              <CardBody className=\"pb-0\">\r\n                <ButtonGroup className=\"float-right\">\r\n                  <ButtonDropdown id='card1' isOpen={this.state.card1} toggle={() => { this.setState({ card1: !this.state.card1 }); }}>\r\n                    <DropdownToggle caret className=\"p-0\" color=\"transparent\">\r\n                      <i className=\"icon-settings\"></i>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>Changelog</DropdownItem>\r\n                      <DropdownItem>View History</DropdownItem>\r\n                    </DropdownMenu>\r\n                  </ButtonDropdown>\r\n                </ButtonGroup>\r\n                <div className=\"text-value\">0.0.1-BETA</div>\r\n                <div>Application Version</div>\r\n\t\t\t\t<div style={{ height: '20px' }}></div>\r\n\t\t\t\t<div><i>Last modified on 2019-02-20 09:01</i></div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '30px' }}>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n            <Card className=\"text-white bg-primary\">\r\n              <CardBody className=\"pb-0\">\r\n                <ButtonGroup className=\"float-right\">\r\n                  <Dropdown id='card2' isOpen={this.state.card2} toggle={() => { this.setState({ card2: !this.state.card2 }); }}>\r\n                    <DropdownToggle caret className=\"p-0\" color=\"transparent\">\r\n                      <i className=\"icon-settings\"></i>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>Changelog</DropdownItem>\r\n                      <DropdownItem>View History</DropdownItem>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </ButtonGroup>\r\n                <div className=\"text-value\">0.1.1</div>\r\n                <div>Mapping Version</div>\r\n              <div style={{ height: '20px' }}></div>\r\n\t\t\t\t<div><i>Last modified on 2019-02-22 19:25</i></div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '30px' }}>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n\t\t  \r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm=\"5\">\r\n                    <CardTitle className=\"mb-0\">Data Growth</CardTitle>\r\n                    <div className=\"small text-muted\">2018</div>\r\n                  </Col>\r\n                  <Col sm=\"7\" className=\"d-none d-sm-inline-block\">\r\n                    <Button color=\"primary\" className=\"float-right\"><i className=\"icon-cloud-download\"></i></Button>\r\n                    <ButtonToolbar className=\"float-right\" aria-label=\"Toolbar with button groups\">\r\n                      <ButtonGroup className=\"mr-3\" aria-label=\"First group\">\r\n                        <Button color=\"outline-secondary\" onClick={() => this.onRadioBtnClick(1)} active={this.state.radioSelected === 1}>Day</Button>\r\n                        <Button color=\"outline-secondary\" onClick={() => this.onRadioBtnClick(2)} active={this.state.radioSelected === 2}>Month</Button>\r\n                        <Button color=\"outline-secondary\" onClick={() => this.onRadioBtnClick(3)} active={this.state.radioSelected === 3}>Year</Button>\r\n                      </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"chart-wrapper\" style={{ height: 300 + 'px', marginTop: 40 + 'px' }}>\r\n                  <Line data={mainChart} options={mainChartOpts} height={300} />\r\n                </div>\r\n              </CardBody>\r\n              \r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}